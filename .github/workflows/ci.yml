# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    # Runs a single command using the runners shell
    - name: Build
      run: npm install && npm run build

    # ssh deploy 不可用
    # - name: Deploy
    #   uses: hengkx/ssh-deploy@v1.0.0
    #   env:
    #     HOST: ${{ secrets.TG_HOST }}
    #     USERNAME: ${{ secrets.TG_USER }}
    #     PASSWORD: ${{ secrets.TG_PASS }}
    #     SOURCE: "./dist"
    #     TARGET: "Documents/frivolous/drip-flow-web/dist"
    #     AFTER_COMMAND: 'npm run stop && npm install --production && npm run start'


    # SSH pipelines
    - name: Deploy
      uses: cross-the-world/ssh-pipeline@master
      env:
        WELCOME: "ssh pipeline"
      with:
          host: ${{ secrets.TG_HOST }}
          user: ${{ secrets.TG_USER }}
          pass: ${{ secrets.TG_PASS }}
          connect_timeout: 10s
          script: |
            ls -la
            cp -r ./dist/ Documents/frivolous/drip-flow-web/dist
            mkdir dev
    

    # Runs a set of commands using the runners shell
    # - name: Deploy
    #   uses: easingthemes/ssh-deploy@v2.0.7
    #   env:
    #     SSH_PRIVATE_KEY: ${{ secrets.ACCESS_TOKEN }}
    #     ARGS: "-avz --delete"
    #     SOURCE: "[Current File Dir]"
    #     REMOTE_HOST: ${{ secrets.T_HOST }}
    #     REMOTE_USER: ${{ secrets.T_USER }}
    #     TARGET: ""
    #   run: |
    #     echo Add other actions to build,
    #     echo test, and deploy your project.


# - name: ssh pipelines
#   uses: cross-the-world/ssh-pipeline@master
#   env:
#     WELCOME: "ssh pipeline"
#   with:
#     host: ${{ secrets.DC_HOST }}
#     user: ${{ secrets.DC_USER }}
#     pass: ${{ secrets.DC_PASS }}
#     port: ${{ secrets.DC_PORT }}
#     connect_timeout: 10s
#     script: |
#       (rm -rf /home/github/test || true)
#       ls -la  
#       echo $WELCOME 
#       mkdir -p /home/github/test/test1 && 
#       mkdir -p /home/github/test/test2 &&


# steps:
# - uses: hengkx/ssh-deploy@v1.0.0
#   env:
#     HOST: ${{ secrets.DEPLOY_HOST }}
#     USERNAME: ${{ secrets.DEPLOY_USERNAME }}
#     PASSWORD: ${{ secrets.DEPLOY_PASSWORD }}
#     PORT: ${{ secrets.DEPLOY_PORT }}
#     SOURCE: 'dist/'
#     TARGET: ${{ secrets.DEPLOY_DEST_PATH }}
#     AFTER_COMMAND: 'npm run stop && npm install --production && npm run start'